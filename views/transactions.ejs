<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Transactions - GCash</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    .transactions-container {
      max-width: 414px;
      margin: 0 auto;
      padding: 20px;
    }
    .section-title {
      font-size: 18px;
      font-weight: bold;
      margin-bottom: 15px;
    }
    .transactions-list {
      background-color: var(--gcash-white);
      border-radius: 10px;
      padding: 15px;
    }
    .no-transactions {
      text-align: center;
      color: #666;
    }
    .transaction-item {
      display: flex;
      justify-content: space-between;
      padding: 10px 0;
      border-bottom: 1px solid #eee;
    }
    .transaction-content {
      display: flex;
      align-items: center;
    }
    .transaction-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 10px;
    }
    .transaction-icon.credit {
      background-color: #e6f3e6;
    }
    .transaction-icon.debit {
      background-color: #f3e6e6;
    }
    .transaction-details {
      flex-grow: 1;
    }
    .transaction-title {
      font-weight: bold;
    }
    .transaction-date {
      color: #666;
      font-size: 14px;
    }
    .transaction-note {
      color: #888;
      font-size: 14px;
    }
    .transaction-amount {
      font-weight: bold;
    }
    .transaction-amount.credit {
      color: green;
    }
    .transaction-amount.debit {
      color: red;
    }
  </style>
</head>
<body>
  <div class="transactions-container">
    <h1 class="section-title">All Transactions</h1>
    <div class="transactions-list" id="transactions-list">
      <div class="no-transactions" id="no-transactions">
        No transactions found
      </div>
    </div>
    <a href="/dashboard">Back to Dashboard</a>
  </div>
  <script>
    // Safely parse user object
    let user;
    try {
      user = <%- JSON.stringify(user) %>;
      if (!user || !user.accNo) {
        throw new Error('Invalid user data');
      }
    } catch (e) {
      console.error('Error parsing user:', e);
      user = { accNo: '' }; // Fallback
      document.getElementById('no-transactions').textContent = 'Error loading user data';
      // Skip transaction fetching
    }

    // Only fetch transactions if user data is valid
    if (user.accNo) {
      fetch('/api/transactions', {
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include', // Include cookies for JWT authentication
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error('Failed to fetch transactions');
          }
          return response.json();
        })
        .then((data) => {
          const transactionsList = document.getElementById('transactions-list');
          const noTransactions = document.getElementById('no-transactions');

          if (data.success && data.transactions && data.transactions.length > 0) {
            const userTransactions = data.transactions.filter(
              (t) => t.senderAccountNumber === user.accNo || t.recipientAccountNumber === user.accNo
            );

            if (userTransactions.length > 0) {
              noTransactions.style.display = 'none';
              transactionsList.innerHTML = '';

              userTransactions.forEach((transaction) => {
                const isCredit = transaction.recipientAccountNumber === user.accNo;
                const transactionItem = document.createElement('div');
                transactionItem.className = `transaction-item ${isCredit ? 'credit' : 'debit'}`;

                const formattedDate = new Date(transaction.date).toLocaleDateString();
                const formattedAmount =
                  'â‚±' +
                  transaction.amount.toLocaleString(undefined, {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                  });

                transactionItem.innerHTML = `
                  <div class="transaction-content">
                    <div class="transaction-icon ${isCredit ? 'credit' : 'debit'}">
                      <i class="fas ${isCredit ? 'fa-arrow-down' : 'fa-arrow-up'}"></i>
                    </div>
                    <div class="transaction-details">
                      <div class="transaction-title">${isCredit ? 'Received from' : 'Sent to'} ${
                        isCredit
                          ? transaction.senderName || 'Unknown Sender'
                          : transaction.recipientName || 'Unknown Recipient'
                      }</div>
                      <div class="transaction-date">${formattedDate}</div>
                      ${transaction.note ? `<div class="transaction-note">${transaction.note}</div>` : ''}
                    </div>
                  </div>
                  <div class="transaction-amount ${isCredit ? 'credit' : 'debit'}">
                    ${isCredit ? '+' : '-'}${formattedAmount}
                  </div>
                `;

                transactionsList.appendChild(transactionItem);
              });
            } else {
              noTransactions.textContent = 'No transactions found';
            }
          } else {
            noTransactions.textContent = 'No transactions found';
          }
        })
        .catch((error) => {
          console.error('Error fetching transactions:', error);
          const noTransactions = document.getElementById('no-transactions');
          if (noTransactions) {
            noTransactions.textContent = 'Error loading transactions';
          }
        });
    }
  </script>
</body>
</html>